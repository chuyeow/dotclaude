{
  "model": "sonnet",
  "statusLine": {
    "type": "command",
    "command": "input=$(cat); cwd=$(echo \"$input\" | jq -r '.workspace.current_dir'); branch=$(cd \"$cwd\" 2>/dev/null && git branch --show-current 2>/dev/null); model=$(echo \"$input\" | jq -r '.model.display_name'); if [ -n \"$branch\" ]; then printf \"\\033[35m%s\\033[0m \\033[34m%s\\033[32m(%s)\\033[00m\" \"$model\" \"$cwd\" \"$branch\"; else printf \"\\033[35m%s\\033[0m \\033[34m%s\\033[00m\" \"$model\" \"$cwd\"; fi"
  },
  "permissions": {
    "allow": [
      "Read",
      "Write(**/*.md)",
      "Edit",
      "MultiEdit",
      "Glob",
      "Grep",
      "WebSearch",
      "WebFetch",
      "Bash(git:*)",
      "Bash(npm:*)",
      "Bash(ls:*)",
      "Bash(cat:*)",
      "Bash(echo:*)",
      "Bash(mkdir:*)",
      "Bash(cp:*)",
      "Bash(mv:*)",
      "Bash(find:*)",
      "Bash(grep:*)",
      "Bash(head:*)",
      "Bash(tail:*)",
      "Bash(wc:*)",
      "Bash(sort:*)",
      "Bash(uniq:*)",
      "TodoWrite",
      "mcp__context7__resolve-library-id",
      "mcp__context7__get-library-docs",
      "mcp__playwright__browser_close",
      "mcp__playwright__browser_resize",
      "mcp__playwright__browser_console_messages",
      "mcp__playwright__browser_handle_dialog",
      "mcp__playwright__browser_evaluate",
      "mcp__playwright__browser_file_upload",
      "mcp__playwright__browser_fill_form",
      "mcp__playwright__browser_install",
      "mcp__playwright__browser_press_key",
      "mcp__playwright__browser_type",
      "mcp__playwright__browser_navigate",
      "mcp__playwright__browser_navigate_back",
      "mcp__playwright__browser_network_requests",
      "mcp__playwright__browser_take_screenshot",
      "mcp__playwright__browser_snapshot",
      "mcp__playwright__browser_click",
      "mcp__playwright__browser_drag",
      "mcp__playwright__browser_hover",
      "mcp__playwright__browser_select_option",
      "mcp__playwright__browser_tabs",
      "mcp__playwright__browser_wait_for"
    ],
    "ask": [
      "Bash(rm:*)",
      "Bash(rmdir:*)",
      "Bash(sudo:*)",
      "Bash(chmod:*)",
      "Bash(curl:*)",
      "Bash(wget:*)",
      "Bash(ssh:*)",
      "Bash(docker:*)",
      "Bash(killall:*)",
      "Bash(pkill:*)"
    ],
    "deny": [
      "Read(**/*.key)",
      "Read(**/*.pem)",
      "Read(**/*.p12)",
      "Read(**/id_rsa*)",
      "Read(**/id_ed25519*)",
      "Read(**/.ssh/**)",
      "Write(**/*.key)",
      "Write(**/*.pem)"
    ]
  },
  "cleanupPeriodDays": 99999
}
